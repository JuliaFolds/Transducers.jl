name: Run test via Pkg.test()

on:
  pull_request:

jobs:
  vanilla-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Resolve refs
        run: |
          git_fetch_branch() {
              refspec="refs/heads/$1:refs/remotes/origin/$1"
              git fetch --unshallow origin "$refspec" || git fetch origin "$refspec"
          }
          echo GITHUB_HEAD_REF=${GITHUB_HEAD_REF}
          echo GITHUB_BASE_REF=${GITHUB_BASE_REF}
          echo
          git_fetch_branch ${GITHUB_HEAD_REF}
          git_fetch_branch ${GITHUB_BASE_REF}
      - run: git diff --name-only "origin/${GITHUB_BASE_REF}" "origin/${GITHUB_HEAD_REF}"
      - name: Check if Pkg.test() is required
        id: check-project-toml
        run: |
          if git diff --name-only "origin/${GITHUB_BASE_REF}" "origin/${GITHUB_HEAD_REF}" | \
              grep -E '^Project\.toml|test/environments/main/Project\.toml$' > \
              /dev/null
          then
              echo "::set-output name=need_test::yes"
          else
              echo "::set-output name=need_test::no"
          fi
      - name: Show output
        run: echo "${{ steps.check-project-toml.outputs.need_test }}"
      - uses: julia-actions/setup-julia@v1
        if: ${{ steps.check-project-toml.outputs.need_test == 'yes' }}
        with:
          version: ^1
      - uses: julia-actions/julia-buildpkg@latest
        if: ${{ steps.check-project-toml.outputs.need_test == 'yes' }}
      - uses: julia-actions/julia-runtest@latest
        if: ${{ steps.check-project-toml.outputs.need_test == 'yes' }}
        env:
          JULIA_NUM_THREADS: "2"
          CI: "true"
